{"ast":null,"code":"var _jsxFileName = \"/Users/osydir/Documents/LPNU/WEB/notes/src/components/Main/Main.js\";\nimport React from \"react\";\nimport Note from './Note/Note';\nimport axios from \"axios\";\nimport { CONFIG } from \"../../config\";\nimport Auth from \"../../utils/Auth/Auth\";\nimport \"./Main.scss\";\nimport ManageNote from \"../ManageNote/ManageNote\";\n\nclass Main extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      notes: [],\n      hasNotes: true,\n      openedModal: false\n    };\n\n    this.componentDidMount = () => {\n      axios.get(CONFIG.apiServer + \"api/notes\", {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Bearer ' + Auth.loggedApiKey\n        }\n      }).then(res => {\n        this.setState({\n          notes: res.data.data,\n          hasNotes: false\n        });\n      }).catch(error => {\n        this.setState({\n          hasNotes: false\n        });\n      });\n    };\n\n    this.renderNotes = () => {\n      const notes = [...this.state.notes];\n\n      if (notes.length === 0 && !this.state.hasNotes) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"card default-block\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h5\", {\n          className: \"text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }\n        }, \"You don`t have notes!\"));\n      }\n\n      return notes.map((note, index) => /*#__PURE__*/React.createElement(Note, {\n        key: index,\n        note: note,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    this.addNote = note => {\n      const notes = [...this.state.notes];\n      notes.unshift(note);\n      this.setState({\n        notes\n      });\n    };\n\n    this.onClosePopup = () => {\n      this.setState({\n        openedModal: false\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ManageNote, {\n      isOpened: this.state.openedModal,\n      onClosePopup: this.onClosePopup,\n      editMode: false,\n      onChangeNote: this.addNote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"add-new-note-btn\",\n      onClick: () => {\n        this.setState({\n          openedModal: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-fluid\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, this.renderNotes()))));\n  }\n\n}\n\nexport default Main;","map":{"version":3,"sources":["/Users/osydir/Documents/LPNU/WEB/notes/src/components/Main/Main.js"],"names":["React","Note","axios","CONFIG","Auth","ManageNote","Main","Component","state","notes","hasNotes","openedModal","componentDidMount","get","apiServer","headers","loggedApiKey","then","res","setState","data","catch","error","renderNotes","length","map","note","index","addNote","unshift","onClosePopup","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Note from './Note/Note'\nimport axios from \"axios\";\nimport {CONFIG} from \"../../config\";\nimport Auth from \"../../utils/Auth/Auth\";\nimport \"./Main.scss\"\nimport ManageNote from \"../ManageNote/ManageNote\";\n\nclass Main extends React.Component {\n    state = {\n        notes: [],\n        hasNotes: true,\n        openedModal: false,\n    }\n\n    componentDidMount = () => {\n        axios.get(CONFIG.apiServer + \"api/notes\",{\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + Auth.loggedApiKey\n            }\n        }).then((res) => {\n            this.setState({\n                notes: res.data.data,\n                hasNotes: false\n            });\n        }).catch((error) => {\n            this.setState({\n                hasNotes: false\n            });\n        });\n    }\n\n    renderNotes = () => {\n        const notes = [...this.state.notes];\n\n        if (notes.length === 0 && !this.state.hasNotes) {\n            return (\n\n                    <div className=\"card default-block\">\n                        <h5 className=\"text-center\">You don`t have notes!</h5>\n                    </div>\n\n            );\n        }\n\n        return notes.map((note, index) => (\n                <Note\n                    key={index}\n                    note={note}\n                />\n            )\n        );\n    }\n\n    addNote = (note) => {\n        const notes = [...this.state.notes];\n        notes.unshift(note);\n        this.setState({notes});\n    }\n\n    onClosePopup = () => {\n        this.setState({openedModal: false});\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <ManageNote\n                    isOpened={this.state.openedModal}\n                    onClosePopup={this.onClosePopup}\n                    editMode={false}\n                    onChangeNote={this.addNote}\n                />\n                <button className=\"add-new-note-btn\" onClick={() => {this.setState({openedModal: true})}}/>\n                <div className=\"container-fluid\">\n                        <div className=\"\">\n                            <div className=\"card-columns\">\n                                {this.renderNotes()}\n                            </div>\n                        </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}