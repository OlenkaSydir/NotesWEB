{"ast":null,"code":"var _jsxFileName = \"/Users/osydir/Documents/LPNU/WEB/notes/src/components/User/User.js\";\nimport React from \"react\";\nimport \"./User.scss\";\nimport axios from \"axios\";\nimport { CONFIG } from \"../../config\";\nimport Auth from \"../../utils/Auth/Auth\";\nimport swal from 'sweetalert';\n\nclass User extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loaded: false,\n      formControls: {\n        name: {\n          value: '',\n          errorMessage: ''\n        },\n        email: {\n          value: '',\n          errorMessage: ''\n        },\n        password: {\n          value: '',\n          errorMessage: ''\n        },\n        repassword: {\n          value: '',\n          errorMessage: ''\n        }\n      }\n    };\n\n    this.inputOnBlurHandler = controlName => {\n      const formControls = { ...this.state.formControls\n      };\n      formControls[controlName].errorMessage = '';\n      this.setState(formControls);\n    };\n\n    this.componentDidMount = () => {\n      axios.get(CONFIG.apiServer + \"api/user\", {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Bearer ' + Auth.loggedApiKey\n        }\n      }).then(res => {\n        const formControls = this.state.formControls;\n        formControls.name.value = res.data.data.name;\n        formControls.email.value = res.data.data.email;\n        this.setState({\n          formControls: formControls,\n          loaded: true\n        });\n      }).catch(error => {\n        Auth.logOut();\n      });\n    };\n\n    this.inputOnChangeHandler = (e, controlName) => {\n      const formControls = { ...this.state.formControls\n      };\n      formControls[controlName].value = e.target.value;\n      this.setState(formControls);\n    };\n\n    this.changeName = () => {\n      if (this.state.formControls.name.value.length !== 0) {\n        axios.put(CONFIG.apiServer + \"api/user\", {\n          name: this.state.formControls.name.value\n        }, {\n          headers: {\n            'Accept': 'application/json',\n            'Authorization': 'Bearer ' + Auth.loggedApiKey\n          }\n        }).then(res => {\n          swal(\"Good job!\", \"Name successful saved!\", \"success\");\n        }).catch(() => {\n          swal(\"Bad!\", \"Something went wrong!\", \"error\");\n        });\n      } else {\n        const formControls = { ...this.state.formControls\n        };\n        formControls.name.errorMessage = 'This field is required';\n        this.setState({\n          formControls\n        });\n      }\n    };\n\n    this.changeEmail = () => {\n      if (this.state.formControls.email.value.length !== 0) {\n        // eslint-disable-next-line\n        let validEmailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n        if (validEmailRegex.test(this.state.formControls.email.value)) {\n          axios.put(CONFIG.apiServer + \"api/user\", {\n            email: this.state.formControls.email.value\n          }, {\n            headers: {\n              'Accept': 'application/json',\n              'Authorization': 'Bearer ' + Auth.loggedApiKey\n            }\n          }).then(res => {\n            swal(\"Good job!\", \"Email successful saved!\", \"success\");\n          }).catch(error => {\n            if (error.response.status === 404) {\n              console.log(error.response.data);\n\n              if (error.response.data.data.email && error.response.data.data.email === 'Email already exists.') {\n                const formControls = { ...this.state.formControls\n                };\n                formControls.email.errorMessage = 'Email already exists';\n                this.setState({\n                  formControls\n                });\n                return;\n              }\n            }\n\n            swal(\"Bad!\", \"Something went wrong!\", \"error\");\n          });\n        } else {\n          const formControls = { ...this.state.formControls\n          };\n          formControls.email.errorMessage = 'Invalid email';\n          this.setState({\n            formControls\n          });\n        }\n      } else {\n        const formControls = { ...this.state.formControls\n        };\n        formControls.email.errorMessage = 'This field is required';\n        this.setState({\n          formControls\n        });\n      }\n    };\n\n    this.changePassword = () => {\n      const formControls = { ...this.state.formControls\n      };\n\n      if (this.state.formControls.password.value.length === 0) {\n        formControls.password.errorMessage = 'This field is required';\n        this.setState({\n          formControls\n        });\n        return;\n      }\n\n      if (this.state.formControls.repassword.value.length === 0) {\n        formControls.repassword.errorMessage = 'This field is required';\n        this.setState({\n          formControls\n        });\n        return;\n      }\n\n      if (this.state.formControls.repassword.value !== this.state.formControls.password.value) {\n        formControls.repassword.errorMessage = 'Fields must be equals';\n        this.setState({\n          formControls\n        });\n        return;\n      }\n\n      axios.put(CONFIG.apiServer + \"api/user\", {\n        password: this.state.formControls.password.value\n      }, {\n        headers: {\n          'Accept': 'application/json',\n          'Authorization': 'Bearer ' + Auth.loggedApiKey\n        }\n      }).then(res => {\n        formControls.repassword.value = '';\n        formControls.password.value = '';\n        this.setState({\n          formControls\n        });\n        swal(\"Good job!\", \"Password successful saved!\", \"success\");\n      }).catch(() => {\n        swal(\"Bad!\", \"Something went wrong!\", \"error\");\n      });\n    };\n  }\n\n  render() {\n    if (!this.state.loaded) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"default-block\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }\n      }, \"Loading...\")));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"default-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"block-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, \"User settings\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-change-info-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-setting-form-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"option-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, \"Name\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control default-input\",\n      name: \"name\",\n      placeholder: \"Name\",\n      value: this.state.formControls.name.value,\n      onChange: e => {\n        this.inputOnChangeHandler(e, 'name');\n      },\n      onBlur: e => {\n        this.inputOnBlurHandler('name');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 41\n      }\n    }, this.state.formControls.name.errorMessage)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn default-btn\",\n      onClick: this.changeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    }, \"Change\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-setting-form-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"option-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    }, \"Change password\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control default-input\",\n      name: \"new_password\",\n      placeholder: \"New password\",\n      value: this.state.formControls.password.value,\n      onChange: e => {\n        this.inputOnChangeHandler(e, 'password');\n      },\n      onBlur: e => {\n        this.inputOnBlurHandler('password');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 41\n      }\n    }, this.state.formControls.password.errorMessage)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control default-input\",\n      name: \"re_password\",\n      placeholder: \"Re-password\",\n      value: this.state.formControls.repassword.value,\n      onChange: e => {\n        this.inputOnChangeHandler(e, 'repassword');\n      },\n      onBlur: e => {\n        this.inputOnBlurHandler('repassword');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 41\n      }\n    }, this.state.formControls.repassword.errorMessage)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn default-btn\",\n      onClick: this.changePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 41\n      }\n    }, \"Change\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"user-setting-form-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"option-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 37\n      }\n    }, \"Email\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      className: \"form-control default-input\",\n      name: \"email\",\n      placeholder: \"Email\",\n      value: this.state.formControls.email.value,\n      onChange: e => {\n        this.inputOnChangeHandler(e, 'email');\n      },\n      onBlur: e => {\n        this.inputOnBlurHandler('email');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"small\", {\n      className: \"error-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 41\n      }\n    }, this.state.formControls.email.errorMessage)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn default-btn\",\n      onClick: this.changeEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 41\n      }\n    }, \"Confirm new email\"))))))));\n  }\n\n}\n\nexport default User;","map":{"version":3,"sources":["/Users/osydir/Documents/LPNU/WEB/notes/src/components/User/User.js"],"names":["React","axios","CONFIG","Auth","swal","User","Component","state","loaded","formControls","name","value","errorMessage","email","password","repassword","inputOnBlurHandler","controlName","setState","componentDidMount","get","apiServer","headers","loggedApiKey","then","res","data","catch","error","logOut","inputOnChangeHandler","e","target","changeName","length","put","changeEmail","validEmailRegex","test","response","status","console","log","changePassword","render"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./User.scss\";\nimport axios from \"axios\";\nimport {CONFIG} from \"../../config\";\nimport Auth from \"../../utils/Auth/Auth\";\nimport swal from 'sweetalert';\n\nclass User extends React.Component {\n\n    state = {\n        loaded: false,\n        formControls: {\n            name: {\n                value: '',\n                errorMessage: ''\n            },\n            email: {\n                value: '',\n                errorMessage: ''\n            },\n            password: {\n                value: '',\n                errorMessage: ''\n            },\n            repassword: {\n                value: '',\n                errorMessage: ''\n            }\n        }\n    }\n\n    inputOnBlurHandler = (controlName) => {\n        const formControls = {...this.state.formControls};\n        formControls[controlName].errorMessage = '';\n        this.setState(formControls);\n    }\n\n    componentDidMount = () => {\n        axios.get(CONFIG.apiServer + \"api/user\", {\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + Auth.loggedApiKey\n            }\n        }).then((res) => {\n            const formControls = this.state.formControls;\n            formControls.name.value = res.data.data.name\n            formControls.email.value = res.data.data.email\n            this.setState({\n                formControls: formControls,\n                loaded: true\n            });\n        }).catch((error) => {\n            Auth.logOut();\n        });\n    }\n\n    inputOnChangeHandler = (e, controlName) => {\n        const formControls = {...this.state.formControls};\n        formControls[controlName].value = e.target.value;\n\n        this.setState(formControls);\n    }\n\n    changeName = () => {\n        if (this.state.formControls.name.value.length !== 0) {\n            axios.put(CONFIG.apiServer + \"api/user\", {\n                name: this.state.formControls.name.value\n            }, {\n                headers: {\n                    'Accept': 'application/json',\n                    'Authorization': 'Bearer ' + Auth.loggedApiKey\n                }\n            }).then((res) => {\n                swal(\"Good job!\", \"Name successful saved!\", \"success\");\n            }).catch(() => {\n                swal(\"Bad!\", \"Something went wrong!\", \"error\");\n            });\n        } else {\n            const formControls = {...this.state.formControls};\n            formControls.name.errorMessage = 'This field is required';\n            this.setState({formControls});\n        }\n    }\n\n    changeEmail = () => {\n        if (this.state.formControls.email.value.length !== 0) {\n            // eslint-disable-next-line\n            let validEmailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n            if (validEmailRegex.test(this.state.formControls.email.value)) {\n                axios.put(CONFIG.apiServer + \"api/user\", {\n                    email: this.state.formControls.email.value\n                }, {\n                    headers: {\n                        'Accept': 'application/json',\n                        'Authorization': 'Bearer ' + Auth.loggedApiKey\n                    }\n                }).then((res) => {\n                    swal(\"Good job!\", \"Email successful saved!\", \"success\");\n                }).catch((error) => {\n                    if (error.response.status === 404) {\n                        console.log(error.response.data)\n                        if (error.response.data.data.email && error.response.data.data.email === 'Email already exists.') {\n                            const formControls = {...this.state.formControls};\n                            formControls.email.errorMessage = 'Email already exists';\n                            this.setState({formControls});\n                            return ;\n                        }\n                    }\n                    swal(\"Bad!\", \"Something went wrong!\", \"error\");\n                });\n            } else {\n                const formControls = {...this.state.formControls};\n                formControls.email.errorMessage = 'Invalid email';\n                this.setState({formControls});\n            }\n        } else {\n            const formControls = {...this.state.formControls};\n            formControls.email.errorMessage = 'This field is required';\n            this.setState({formControls});\n        }\n    }\n\n    changePassword = () => {\n        const formControls = {...this.state.formControls};\n        if (this.state.formControls.password.value.length === 0) {\n            formControls.password.errorMessage = 'This field is required';\n            this.setState({formControls});\n            return ;\n        }\n\n        if (this.state.formControls.repassword.value.length === 0) {\n            formControls.repassword.errorMessage = 'This field is required';\n            this.setState({formControls});\n            return ;\n        }\n\n        if (this.state.formControls.repassword.value !== this.state.formControls.password.value) {\n            formControls.repassword.errorMessage = 'Fields must be equals';\n            this.setState({formControls});\n            return ;\n        }\n\n        axios.put(CONFIG.apiServer + \"api/user\", {\n            password: this.state.formControls.password.value\n        }, {\n            headers: {\n                'Accept': 'application/json',\n                'Authorization': 'Bearer ' + Auth.loggedApiKey\n            }\n        }).then((res) => {\n            formControls.repassword.value = '';\n            formControls.password.value = '';\n            this.setState({formControls});\n            swal(\"Good job!\", \"Password successful saved!\", \"success\");\n        }).catch(() => {\n            swal(\"Bad!\", \"Something went wrong!\", \"error\");\n        });\n    }\n\n    render() {\n        if (!this.state.loaded) {\n            return (\n                <div className=\"container\">\n                    <div className=\"default-block\">\n                        <h4>Loading...</h4>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className=\"container\">\n                <div className=\"default-block\">\n                    <h2 className=\"block-title\">User settings</h2>\n                    <div className=\"user-change-info-block\">\n                        <div className=\"user-setting-form-block\">\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <h3 className=\"option-title\">Name</h3>\n                                </div>\n                                <div className=\"col-8\">\n                                    <div className=\"form-group\">\n                                        <input type=\"text\" className=\"form-control default-input\" name=\"name\"\n                                               placeholder=\"Name\"\n                                               value={this.state.formControls.name.value}\n                                               onChange={(e) => {this.inputOnChangeHandler(e, 'name')}}\n                                               onBlur={(e) => {this.inputOnBlurHandler('name')}}/>\n                                        <small className=\"error-message\">{this.state.formControls.name.errorMessage}</small>\n                                    </div>\n                                    <div className=\"form-group text-center\">\n                                        <button className=\"btn default-btn\" onClick={this.changeName}>Change</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"user-setting-form-block\">\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <h3 className=\"option-title\">Change password</h3>\n                                </div>\n                                <div className=\"col-8\">\n                                    <div className=\"form-group\">\n                                        <input type=\"password\" className=\"form-control default-input\"\n                                               name=\"new_password\"\n                                               placeholder=\"New password\" value={this.state.formControls.password.value}\n                                               onChange={(e) => {this.inputOnChangeHandler(e, 'password')}}\n                                               onBlur={(e) => {this.inputOnBlurHandler('password')}}/>\n                                        <small className=\"error-message\">{this.state.formControls.password.errorMessage}</small>\n                                    </div>\n                                    <div className=\"form-group\">\n                                        <input type=\"password\" className=\"form-control default-input\" name=\"re_password\"\n                                               placeholder=\"Re-password\" value={this.state.formControls.repassword.value}\n                                               onChange={(e) => {this.inputOnChangeHandler(e, 'repassword')}}\n                                               onBlur={(e) => {this.inputOnBlurHandler('repassword')}}/>\n                                        <small className=\"error-message\">{this.state.formControls.repassword.errorMessage}</small>\n                                    </div>\n                                    <div className=\"form-group text-center\">\n                                        <button className=\"btn default-btn\" onClick={this.changePassword}>Change</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"user-setting-form-block\">\n                            <div className=\"row\">\n                                <div className=\"col-4\">\n                                    <h3 className=\"option-title\">Email</h3>\n                                </div>\n                                <div className=\"col-8\">\n                                    <div className=\"form-group\">\n                                        <input type=\"email\" className=\"form-control default-input\" name=\"email\"\n                                               placeholder=\"Email\"\n                                               value={this.state.formControls.email.value}\n                                               onChange={(e) => {this.inputOnChangeHandler(e, 'email')}}\n                                               onBlur={(e) => {this.inputOnBlurHandler('email')}}/>\n                                        <small className=\"error-message\">{this.state.formControls.email.errorMessage}</small>\n                                    </div>\n                                    <div className=\"form-group text-center\">\n                                        <button className=\"btn default-btn\" onClick={this.changeEmail}>Confirm new email</button>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default User;\n"]},"metadata":{},"sourceType":"module"}